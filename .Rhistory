?ts
remove(list = ls())
setwd("~/GitHub/Forecasting/ARIMAX-Lagged-Predictors/")
#librerías
library(readxl)
library(tidyverse)
library(tseries)
library(urca)
library(forecast)
# Importar datos
data_x <- read_excel("data.xlsx")
# Importar datos
data_x <- read_excel("data.xlsx")
data_x <- ts(data_x, start= c(2001,1), frequency = 251)
# Grafico de datos en niveles
ts.plot(scale(data_x), col = c(1, 2),  lwd = c(1, 2)) #la roja es el petroleo
oil_lag <- cbind(
AdLag9 = stats::lag(data_x[,"oil"],-9),
AdLag10 = stats::lag(data_x[,"oil"],-10),
AdLag11 = stats::lag(data_x[,"oil"],-11),
AdLag12 = stats::lag(data_x[,"oil"],-12))
AdLag9
oil_lag[,1]
summary(oil_lag[,1])
table(oil_lag[,1])
xx<-(oil_lag[,1])
View(data_x)
oil_lag[,1]
?lag
oil_lag <- cbind(
AdLag9 = stats::lag(data_x[,"oil"],-1),
AdLag10 = stats::lag(data_x[,"oil"],-2),
AdLag11 = stats::lag(data_x[,"oil"],-3),
AdLag12 = stats::lag(data_x[,"oil"],-4))
oil_lag <- cbind(
AdLag9 = stats::lag(data_x[,"oil"],1),
AdLag10 = stats::lag(data_x[,"oil"],2),
AdLag11 = stats::lag(data_x[,"oil"],3),
AdLag12 = stats::lag(data_x[,"oil"],4))
View(oil_lag)
oil_lag <- cbind(
AdLag9 = stats::lag(data_x[,"oil"], 0),
AdLag10 = stats::lag(data_x[,"oil"],-1),
AdLag11 = stats::lag(data_x[,"oil"],-2),
AdLag12 = stats::lag(data_x[,"oil"],-3))
oil_lag <- cbind(
Lag0 = data_x[,"oil"],
Lag10 = stats::lag(data_x[,"oil"],-1),
Lag11 = stats::lag(data_x[,"oil"],-2),
Lag12 = stats::lag(data_x[,"oil"],-3))
View(oil_lag)
oil_lag <- cbind(
Lag0 = data_x[,"oil"],
Lag1 = stats::lag(data_x[,"oil"],-1),
Lag2 = stats::lag(data_x[,"oil"],-2),
Lag3 = stats::lag(data_x[,"oil"],-3))
View(oil_lag)
View(oil_lag)
?auto.arima
fit1 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1], stationary=TRUE)
fit2 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:2], stationary=TRUE)
fit3 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:3], stationary=TRUE)
fit4 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:4], stationary=TRUE)
# chose the best 1:3
c(fit1[["aicc"]],fit2[["aicc"]],fit3[["aicc"]],fit4[["aicc"]])
modelo_x <- auto.arima(data_x[4:4848,1], xreg = oil_lag[4:4848,1:4], seasonal=T, stepwise=T, approximation=T)
summary(modelo_x)
modelo_x
checkresiduals(modelo_x) # Los residuales estan correlacionados
oil_lag[4839:4848,1]
View(data_x)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(AdLag9=oil_lag[4845:4848,1],
AdLag10=oil_lag[4845:4848,2],
AdLag11=oil_lag[4845:4848,3])), include = 50)
# Pronóstico
autoplot(forecast(modelo_x, h=4,
xreg = cbind(AdLag9=oil_lag[4845:4848,1],
AdLag10=oil_lag[4845:4848,2],
AdLag11=oil_lag[4845:4848,3])), include = 50)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4845:4848,1],
Lag1=oil_lag[4845:4848,2],
Lag2=oil_lag[4845:4848,3],
Lag3=oil_lag[4845:4848,4])), include = 50)
oil_lag[4845:4848,1]
oil_lag[4845:4848,2]
oil_lag[4845:4848,3]
oil_lag[4845:4848,4]
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 50)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 30)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 15)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 39)
# Pronóstico
ts.plor(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 39)
# Pronóstico
ts.plot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 39)
# Pronóstico
autoplot(forecast(modelo_x, h=3,
xreg = cbind(Lag0=oil_lag[4846:4848,1],
Lag1=oil_lag[4846:4848,2],
Lag2=oil_lag[4846:4848,3],
Lag3=oil_lag[4846:4848,4])), include = 39)
# Pronóstico
autoplot(forecast(modelo_x, h=15,
xreg = cbind(Lag0=oil_lag[4833:4848,1],
Lag1=oil_lag[4833:4848,2],
Lag2=oil_lag[4833:4848,3],
Lag3=oil_lag[4833:4848,4])), include = 39)
# Pronóstico
autoplot(forecast(modelo_x, h=30,
xreg = cbind(Lag0=oil_lag[4818:4848,1],
Lag1=oil_lag[4818:4848,2],
Lag2=oil_lag[4818:4848,3],
Lag3=oil_lag[4818:4848,4])), include = 39)
# Pronóstico
autoplot(forecast(modelo_x, h=10,
xreg = cbind(Lag0=oil_lag[4838:4848,1],
Lag1=oil_lag[4838:4848,2],
Lag2=oil_lag[4838:4848,3],
Lag3=oil_lag[4838:4848,4])), include = 39)
# Pronóstico
autoplot(forecast(modelo_x, h=10,
xreg = cbind(Lag0=oil_lag[4838:4848,1],
Lag1=oil_lag[4838:4848,2],
Lag2=oil_lag[4838:4848,3],
Lag3=oil_lag[4838:4848,4])), include = 50)
# Pronóstico
autoplot(forecast(modelo_x, h=10,
xreg = cbind(Lag0=oil_lag[4838:4848,1],
Lag1=oil_lag[4838:4848,2],
Lag2=oil_lag[4838:4848,3],
Lag3=oil_lag[4838:4848,4])), include = 100)
################################################
# Con este código se pueden pronósticar series de tiempo multivariadas
#
## Funciones de transferencia para pronosticar el IPC utilizando el precio del petróleo
#
# Hecho por Mauricio Montiel el 14/04/2020
###############################################
# Preliminares
remove(list = ls())
setwd("~/GitHub/Forecasting/ARIMAX-Lagged-Predictors/")
#librerías
library(readxl)
library(tidyverse)
library(tseries)
library(urca)
library(forecast)
# Importar datos
data_x <- read_excel("data.xlsx")
data_x <- ts(data_x, start= c(2001,1), frequency = 251)
# Grafico de datos en niveles
ts.plot(scale(data_x), col = c(1, 2),  lwd = c(1, 2)) #la roja es el petroleo
# Prueba de estacionariedad para el ipc
ur.kpss(data_x[,1]) %>% summary() #los datos en niveles no son estacionarios
ur.kpss(diff(data_x[,1])) %>% summary() # los datos diferenciados si son estacionarios
# Prueba de estacionariedad para el petróleo
ur.kpss(data_x[,2]) %>% summary() #los datos en niveles no son estacionarios
ur.kpss(diff(data_x[,2])) %>% summary() # los datos diferenciados si son estacionarios
oil_lag <- cbind(
Lag0 = data_x[,"oil"],
Lag1 = stats::lag(data_x[,"oil"],-1),
Lag2 = stats::lag(data_x[,"oil"],-2),
Lag3 = stats::lag(data_x[,"oil"],-3))
View(oil_lag)
fit1 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1], stationary=TRUE)
fit2 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:2], stationary=TRUE)
fit3 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:3], stationary=TRUE)
fit4 <- auto.arima(data_x[4:4848,1], xreg=oil_lag[4:4848,1:4], stationary=TRUE)
# chose the best
c(fit1[["aicc"]],fit2[["aicc"]],fit3[["aicc"]],fit4[["aicc"]])
# Selección automatica del modelo ARIMAX
modelo_x <- auto.arima(data_x[4:4848,1], xreg = oil_lag[4:4848,1:4], seasonal=T, stepwise=T, approximation=T)
summary(modelo_x)
checkresiduals(modelo_x) # Los residuales estan correlacionados
# Pronóstico
autoplot(forecast(modelo_x, h=10,
xreg = cbind(Lag0=oil_lag[4838:4848,1],
Lag1=oil_lag[4838:4848,2],
Lag2=oil_lag[4838:4848,3],
Lag3=oil_lag[4838:4848,4])), include = 100)
